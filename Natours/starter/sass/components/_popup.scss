.popup {
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, 0.9);
  height: 100vh;
  width: 100vw;
  z-index: 5000;

  //  to make the popup unvisable. 'opacity: 0;' is not enough, it will be stil there, so that's why we use 'visibility:hidden'
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;

  &__content {
    @include absCenter;

    width: 60vw;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem ($color-black, 0.2);
    border-radius: 3px;
    display: table;
    overflow: hidden;

    //  to make the popup comming infront of the user, initial state, rest by the target:
    opacity: 0;
    // because the transform translate is already in our mixin... we have to declare it one more time here 'transform: translate()' and then 'scale()'
    transform: translate(-50%, -50%) scale(0);
    transition: all 0.4s 0.2s;
  }

  &__left {
    width: 33.3333333%;

    // float: left;
    // instead of using floats, we can simulate a table. Thanks to that, the right element will occupy the whole place. The parent elm need to be set at 'display: table'. Now we are faking the table, with real table we would need a html to make a real table.
    display: table-cell;
    vertical-align: middle;

    @include respond(tab-port) {
      display: none;
    }
  }

  &__right {
    width: 66.66666%;

    // float: left;
    // instead of using floats, we can simulate a table. Thanks to that, the right element will occupy the whole place. The parent elm need to be set at 'display: table'
    display: table-cell;

    //  this properity we can use on table-cell, so the right cell is centered verticaly to the center of the left one.
    vertical-align: middle;
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    //todo column layout:

    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid $color-grey-light-2;

    column-count: 2;

    // space between columns - deault: 1em (1x current elm font-size)
    column-gap: 4rem;

    // line between two columns
    column-rule: 1px solid $color-grey-light-2;

    // hyphenation
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
  }

  //todo open popup

  //  to open the popup after clicking on booking button.
  // so we have the pseudo class called target, which applies to the element which is the target when we click on a button, or basically when the URL changes to having target in it. The markup need to have id="popup": <div class="popup" id="popup">. So when the #popup is added to the web address we can select the popup and changes it properity, so it's visable
  &:target {
    opacity: 1;
    visibility: visible;
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all 0.2s;
      line-height: 1;
    }

    &:hover {
      color: $color-primary;
    }
  }
}
