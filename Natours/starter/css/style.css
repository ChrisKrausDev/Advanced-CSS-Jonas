@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  30% {
    transform: translateX(20px); }
  100% {
    opacity: 1;
    /* translate(0) - this is the start position */
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); }
  30% {
    transform: translateX(-20px); }
  100% {
    opacity: 1;
    /* translate(0) - this is the start position */
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(100px); }
  100% {
    opacity: 1;
    /* translate(0) - this is the start position */
    transform: translate(0); } }

* {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  /* fonts are inherited, so that's why it's better to declarate fonts in body selector - it's more efficient, good practice also*/
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* if animation is a bit of shaky then use this to fix it */
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; - 3x*/
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    margin-bottom: 60px;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation-name: moveInRight;
    animation-duration: 2s; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.3); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.btn {
  /* pseudo klasa :link */
  /* default <a> is a text (inline). After that it's a block element, displayed after all others el*/
  display: inline-block;
  /* creating a pseudo-element for special efects*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    border-radius: 100px;
    transition: all 0.2s;
    font-size: 1.6rem;
    position: relative; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    /* when hover btn then do sth on btn::after elm */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      /* will be invisible after 0.4s */
      opacity: 0; }
  .btn:active {
    transform: translateY(1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: white;
    color: #777;
    animation-name: moveInBottom;
    animation-duration: 0.4s; }
    .btn--white::after {
      background-color: white; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* it will automatically apply the styles up to 0% before animation starts : 
      
        @keyframes moveInBottom {
        0% {
            opacity: 0;
            transform: translateY(100px);
        }*/
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #7ed56f;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #7ed56f;
  padding: 3px; }

.btn-text:hover {
  background-color: #7ed56f;
  color: white;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0px); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }

.row {
  max-width: 1140px;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 80px; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 60px; }
  .row .col-1-of-2 {
    width: calc((100% - 60px) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 60px) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 60px) / 3) + 60px); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 60px) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 60px) / 4) + 60px); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 60px) / 4) + 2 * 60px); }

.header {
  height: 95vh;
  /* ../ - go one folder up. After ',' we can specify next background image, when we want gradien, first come the gradien*/
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.808), rgba(40, 180, 133, 0.801)), url(../img/hero.jpg);
  background-size: cover;
  /* whatever the viewport size is, the top of image will always stay at the top of the container */
  background-position: top;
  /* now the header is an origin, position where the top and left property for .logo-box start to count if it has a absolute position */
  position: relative;
  /* specifying polygon in which the image, or elemtn, will be still visable*/
  /* clip-path: polygon(x y, x y, x y, x y); */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 40px;
    left: 40px; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
